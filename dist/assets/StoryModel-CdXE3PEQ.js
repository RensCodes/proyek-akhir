import{T as s,S as l}from"./index-Q4aJbjSp.js";const h={_storiesCache:null,async fetchStories(o=!1){if(!o&&this._storiesCache)return console.log("StoryModel: Mengembalikan cerita dari cache."),this._storiesCache;const r=s.getToken();if(!r)throw console.error("StoryModel: Token tidak ditemukan untuk fetchStories."),new Error("Sesi Anda telah berakhir atau Anda belum login. Silakan login kembali.");try{const e=await l.getStories(r);return console.log("StoryModel: Cerita berhasil diambil dari API",e),this._storiesCache=e.sort((t,n)=>new Date(n.createdAt)-new Date(t.createdAt)),this._storiesCache}catch(e){throw console.error("StoryModel.fetchStories error:",e),this._storiesCache=null,e}},async addNewStory(o,r,e,t){const n=s.getToken();if(!n)throw new Error("Sesi Anda telah berakhir. Silakan login kembali untuk menambah cerita.");if(!o||!r)throw new Error("Deskripsi dan foto wajib diisi.");if(!(r instanceof File))throw new Error("Data foto tidak valid. Harus berupa File.");const a=new FormData;a.append("description",o),a.append("photo",r),e!=null&&t!==null&&t!==void 0&&(a.append("lat",parseFloat(e)),a.append("lon",parseFloat(t)));try{const i=await l.addStory(n,a);return console.log("StoryModel: Cerita berhasil ditambahkan",i),this._storiesCache=null,i}catch(i){throw console.error("StoryModel.addNewStory error:",i),i}},async fetchStoryDetail(o){const r=s.getToken();if(!r)throw new Error("Sesi Anda telah berakhir. Silakan login kembali.");try{return await l.getStoryDetail(r,o)}catch(e){throw console.error(`StoryModel.fetchStoryDetail (id: ${o}) error:`,e),e}},clearStoriesCache(){this._storiesCache=null,console.log("StoryModel: Cache cerita dibersihkan.")}};export{h as default};
