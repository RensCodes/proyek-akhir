function n(o,a,h){const s={_authModel:o,_authView:a,_router:h,async handleLogin(i,r){if(this._authView.clearError("login"),!i||!r){this._authView.displayError("login","Email dan password tidak boleh kosong.");return}this._authView.showLoading("login");try{const e=await this._authModel.login(i,r);this._authView.hideLoading("login"),console.log(`AuthPresenter: Login berhasil untuk ${e.name}`),this._router.navigateTo("home")}catch(e){this._authView.hideLoading("login"),this._authView.displayError("login",e.message||"Login gagal. Periksa kembali kredensial Anda."),console.error("AuthPresenter.handleLogin error:",e)}},async handleRegister(i,r,e){if(this._authView.clearError("register"),!i||!r||!e){this._authView.displayError("register","Nama, email, dan password tidak boleh kosong.");return}this._authView.showLoading("register");try{const t=await this._authModel.register(i,r,e);this._authView.hideLoading("register"),console.log(`AuthPresenter: Registrasi berhasil - ${t.message}`),this._authView.displayError("register","Registrasi berhasil! Silakan login.")}catch(t){this._authView.hideLoading("register"),this._authView.displayError("register",t.message||"Registrasi gagal. Coba lagi."),console.error("AuthPresenter.handleRegister error:",t)}},navigateToLoginPage(){this._router.navigateTo("login")},navigateToRegisterPage(){this._router.navigateTo("register")},showLoginPage(){this._authView.clearForms(),this._authView.renderLoginForm()},showRegisterPage(){this._authView.clearForms(),this._authView.renderRegisterForm()},destroy(){this._authView&&typeof this._authView.destroy=="function"&&this._authView.destroy(),this._authModel=null,this._authView=null,this._router=null,console.log("AuthPresenter instance (dari factory) dihancurkan.")}};return a.setPresenter(s),s}export{n as default};
