import r from"./DbService-BL4Dz8du.js";import{T as d,S}from"./index-CiRWjb8D.js";const u={_storiesCache:null,async fetchStories(e=!1){if(!e&&this._storiesCache)return this._storiesCache;const o=d.getToken(),i=navigator.onLine;try{let t=[];if(i&&o)try{t=await S.getStories(o),await r.putStories(t);const a=await r.getDeletedStoryIds();t=t.filter(n=>!a.includes(n.id))}catch(a){console.warn("[StoryModel] Gagal fetch dari API, fallback ke IndexedDB:",a),t=await this.getAllStoriesFromDb()}else t=await this.getAllStoriesFromDb();return this._storiesCache=t.sort((a,n)=>new Date(n.createdAt)-new Date(a.createdAt)),this._storiesCache}catch(t){console.warn("[StoryModel] catch besar, fallback final ke cache:",t);const a=await this.getAllStoriesFromDb();if((a==null?void 0:a.length)>0)return this._storiesCache=a,a;throw new Error("Gagal mengambil cerita dan tidak ada data offline tersedia.")}},async addNewStory(e,o,i,t){const a=d.getToken();if(!a)throw new Error("Sesi Anda telah berakhir. Silakan login kembali.");if(!e||!o)throw new Error("Deskripsi dan foto wajib diisi.");const n=new FormData;n.append("description",e),n.append("photo",o),i!=null&&t!=null&&(n.append("lat",parseFloat(i)),n.append("lon",parseFloat(t)));try{const l=await S.addStory(a,n);return this._storiesCache=null,l}catch{const s=(await this._toBase64(o)).split(",")[1],c={description:e,photoBase64:s,lat:i,lon:t,timestamp:Date.now()};throw await r.addStoryToOutbox(c),new Error("Cerita gagal diunggah, disimpan ke outbox offline.")}},async syncOutboxStories(){const e=d.getToken();if(!e)return{synced:0};const o=await r.getAllOutboxStories();if(!o.length)return{synced:0};let i=0;for(const t of o)try{const a=await this._base64ToBlob(`data:image/jpeg;base64,${t.photoBase64}`,"image/jpeg"),n=new File([a],"photo.jpg",{type:"image/jpeg"}),l=new FormData;l.append("description",t.description),l.append("photo",n),t.lat&&t.lon&&(l.append("lat",parseFloat(t.lat)),l.append("lon",parseFloat(t.lon))),await S.addStory(e,l),await r.deleteStoryFromOutbox(t.tempId),i++}catch(a){console.error("Gagal sync outbox:",a)}return this._storiesCache=null,{synced:i}},async getAllStoriesFromDb(){const e=await r.getAllStories(),o=await r.getAllSavedStories(),i=await r.getAllOutboxStories(),t=await r.getDeletedStoryIds(),a=new Map(o.map(s=>[s.id,s])),n=e.map(s=>{const c=a.get(s.id);return{...s,photoBase64:s.photoBase64||(c==null?void 0:c.photoBase64)||null}}),l=i.map(s=>({id:s.tempId,description:s.description,photoBase64:s.photoBase64,lat:s.lat,lon:s.lon,createdAt:new Date(s.timestamp).toISOString(),name:"Anda (Offline)"})),h=[...n,...l].filter(s=>!t.includes(s.id));return console.log("[StoryModel] Final stories for view (with base64 fallback):",h),h},async deleteStoryFromDb(e){await r.deleteStory(e),await r.deleteStoryFromOutbox(e),await r.markStoryAsDeleted(e),this._storiesCache&&(this._storiesCache=this._storiesCache.filter(o=>o.id!==e))},async clearAllStoriesFromDb(){await r.clearAllStories(),this._storiesCache=null},clearStoriesCache(){this._storiesCache=null},async fetchStoryDetail(e){const o=d.getToken();if(!o)throw new Error("Silakan login kembali.");return await S.getStoryDetail(o,e)},async saveStoryToDb(e){if(!(e!=null&&e.id))throw new Error("Cerita tidak valid.");await r.putStories([e])},async _toBase64(e){return new Promise((o,i)=>{const t=new FileReader;t.onloadend=()=>o(t.result),t.onerror=i,t.readAsDataURL(e)})},async _base64ToBlob(e,o="image/jpeg"){return await(await fetch(e)).blob()},async getAllSavedStories(){return await r.getAllSavedStories()},async getSavedStories(){return await this.getAllSavedStories()},async deleteSavedStory(e){return await r.deleteSavedStory(e)},async clearAllSavedStories(){return await r.clearSavedStories()},async isStorySaved(e){return await r.isStorySaved(e)},async deleteFavoriteStory(e){return await this.deleteSavedStory(e)},async clearFavoriteStories(){return await this.clearAllSavedStories()}};export{u as default};
