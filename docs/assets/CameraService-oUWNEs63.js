import{U as i}from"./index-CbKvKYHm.js";const s={videoStream:null,videoElement:null,canvasElement:null,setElements(e,a){this.videoElement=e,this.canvasElement=a,console.log("CameraService: Elements set",{videoElement:e,canvasElement:a})},async startCamera(){if(!this.videoElement||!this.canvasElement)return i.showMessage("Error Kamera","Elemen video atau canvas belum di-set untuk CameraService.",!0),console.error("CameraService: Video atau Canvas element belum di-set."),null;if(console.log("CameraService: Memulai kamera..."),navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)try{return this.stopCamera(),this.videoStream=await navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"}}),this.videoElement.srcObject=this.videoStream,await new Promise((e,a)=>{const t=setTimeout(()=>{console.warn("CameraService: Timeout saat menunggu metadata video."),a(new Error("Timeout saat menunggu metadata video."))},5e3);this.videoElement.onloadedmetadata=()=>{clearTimeout(t),console.log("CameraService: Video metadata loaded.",this.videoElement.videoWidth,this.videoElement.videoHeight),(this.videoElement.videoWidth===0||this.videoElement.videoHeight===0)&&console.warn("CameraService: Metadata video dimuat tetapi dimensi masih 0."),e()},this.videoElement.onerror=r=>{clearTimeout(t),console.error("CameraService: Error pada elemen video saat memuat metadata.",r),a(new Error("Error pada elemen video."))}}),this.videoElement.style.display="block",this.canvasElement.style.display="none",console.log("CameraService: Kamera berhasil dimulai."),this.videoStream}catch(e){console.error("CameraService: Error mengakses kamera: ",e);let a=`Tidak dapat mengakses kamera: ${e.message}.`;return e.name==="NotAllowedError"?a="Anda menolak izin kamera.":e.name==="NotFoundError"||e.name==="DevicesNotFoundError"?a="Kamera tidak ditemukan.":e.name==="NotReadableError"&&(a="Kamera sedang digunakan aplikasi lain."),i.showMessage("Error Kamera",a,!0),null}else return i.showMessage("Error Kamera","Fitur kamera tidak didukung browser ini.",!0),console.error("CameraService: getUserMedia tidak didukung."),null},captureImage(){if(console.log("CameraService: Mencoba mengambil gambar..."),!this.videoStream||!this.videoElement||!this.canvasElement)return i.showMessage("Error Kamera","Kamera belum diinisialisasi atau stream tidak aktif.",!0),console.error("CameraService: Stream, video, atau canvas tidak tersedia untuk captureImage."),null;if(this.videoElement.readyState<this.videoElement.HAVE_METADATA||this.videoElement.videoWidth===0||this.videoElement.videoHeight===0)return i.showMessage("Error Kamera","Dimensi video tidak valid atau video belum siap. Coba mulai ulang kamera.",!0),console.error("CameraService: Dimensi video 0 atau video belum siap.",{width:this.videoElement.videoWidth,height:this.videoElement.videoHeight,readyState:this.videoElement.readyState}),null;console.log("CameraService: Menggambar video ke canvas. Dimensi Video:",this.videoElement.videoWidth,"x",this.videoElement.videoHeight),this.canvasElement.width=this.videoElement.videoWidth,this.canvasElement.height=this.videoElement.videoHeight;const e=this.canvasElement.getContext("2d");if(!e)return i.showMessage("Error Canvas","Tidak bisa mendapatkan konteks 2D dari canvas.",!0),console.error("CameraService: Gagal mendapatkan konteks 2D dari canvas."),null;try{e.drawImage(this.videoElement,0,0,this.canvasElement.width,this.canvasElement.height)}catch(t){return i.showMessage("Error Menggambar","Gagal menggambar video ke canvas.",!0),console.error("CameraService: Error saat drawImage:",t),null}let a=null;try{a=this.canvasElement.toDataURL("image/jpeg",.8),console.log("CameraService: Gambar berhasil diambil. Data URL (awal):",a?a.substring(0,50)+"...":"null")}catch(t){return i.showMessage("Error Konversi Gambar","Gagal mengonversi gambar ke format data URL.",!0),console.error("CameraService: Error saat toDataURL:",t),null}return this.stopCamera(),a},stopCamera(){this.videoStream&&(this.videoStream.getTracks().forEach(e=>{e.stop(),console.log(`CameraService: Track ${e.kind} dihentikan.`)}),this.videoStream=null,this.videoElement&&this.videoElement.srcObject&&(this.videoElement.srcObject=null),console.log("CameraService: Stream kamera dihentikan sepenuhnya."))}};export{s as default};
